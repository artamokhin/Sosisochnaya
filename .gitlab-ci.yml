stages:
  - build
  - test
  - release

cache:
  paths:
    - .npm/
    - .m2/repository
  # keep cache across branch
  key: "$CI_COMMIT_REF_SLUG"

variables:
   TYPE_JOB: 'Type of job'
   NAME_BUILD_JOB: 'Name of build-job'
   pachka_bot: "https://api.pachca.com/webhooks/***REMOVED***"
   VERSION: 1.0.${CI_PIPELINE_ID}
   MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
   

include:
  - template: Security/SAST.gitlab-ci.yml

.notify-job:
  stage: build
  variables:
    download_link: "https://gitlab.praktikum-services.ru/api/v4/projects/1818/jobs/artifacts/main/download?job=$NAME_BUILD_JOB&private_token=$ProjectToken"

    message: "Артамохин Александр собрал $TYPE_JOB"
  after_script:
   - 'curl -X POST -H "Content-type: application/json" 
      -d " { \"message\": \"$message [Скачать тут]($download_link)\" } " $pachka_bot'

build-backend-code-job:
  extends: .notify-job
  stage: build 
  variables:
     TYPE_JOB: "backend" 
     NAME_BUILD_JOB: "build-backend-code-job" 
  only:
    changes:
    - backend/*
  script:
    - cd backend
    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -Dversion.application=${VERSION} 
  artifacts:
    paths:
      - backend/target/sausage-store-${VERSION}-SNAPSHOT.jar
      - ${CI_PROJECT_DIR}/.m2/ # сохранение зависимостей для SAST 

spotbugs-sast:
  stage: test 
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository # не забудьте при сборке также указывать эту папку через аргумент -Dmaven.repo.local   

sonarqube-backend-sast:
  stage: test
  only:
    changes:
    - backend/*
  image: maven:3.8-openjdk-16 # тот самый docker-образ, о котором мы все узнаем в будущем
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=$SonarQubeProjectBackend
      -Dsonar.host.url=$SonarQubeUrl
      -Dsonar.login=$SonarQubeLogin 
  needs:
    - build-backend-code-job

build-frontend-code-job:
  extends: .notify-job
  variables:
     TYPE_JOB: "frontend" 
     NAME_BUILD_JOB: "build-frontend-code-job"
  stage: build  
  only:
    changes:
    - frontend/*
  script:        
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend  
   
sonarqube-frontend-sast:
  stage: test
  only:
    changes:
    - frontend/*
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_TOKEN: $SonarQubeToken
    SONAR_HOST_URL: $SonarQubeUrl
    GIT_DEPTH: 0  
  script:
    - cd frontend
    - sonar-scanner 
      -Dsonar.projectKey=$SonaQubeProjectFrontend 
      -Dsonar.sources=. 
      -Dsonar.host.url=$SonarQubeUrl 
      -Dsonar.login=$SonarQubeLogin 
  needs:
    - build-frontend-code-job
    
upload-backend-release:
  stage: release
  only:
    changes:
      - backend/*
  needs:
    - build-backend-code-job
  script:
    - cd backend
    - mvn -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -s settings.xml -Dversion.application=${VERSION} -DskipTests deploy 
    
upload-frontend-release:
  stage: release
  only:
    changes:
    - frontend/*
  needs:
    - build-frontend-code-job
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL}/sausage-store-front/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz 

