stages:
  - build
  - test
  - notify

include:
  - template: Security/SAST.gitlab-ci.yml

build-backend-code-job:
  stage: build  
  only:
    changes:
    - backend/*
  script:
    - cd backend
    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository 
  cache:
    key: $CI_BUILD_REF_NAME"
    paths:
    - .m2/repository
  artifacts:
    paths:
      - backend/target/sausage-store-0.0.1-SNAPSHOT.jar
      - ${CI_PROJECT_DIR}/.m2/ # сохранение зависимостей для SAST 

spotbugs-sast:
  stage: test
  cache:
    key: $CI_BUILD_REF_NAME"   
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository # не забудьте при сборке также указывать эту папку через аргумент -Dmaven.repo.local   

sonarqube-backend-sast:
  stage: test
  only:
    changes:
    - backend/*
  image: maven:3.8-openjdk-16 # тот самый docker-образ, о котором мы все узнаем в будущем
  cache:
    key: $CI_BUILD_REF_NAME"
    paths:
    - .m2/repository
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=$SonarQubeProjectBackend
      -Dsonar.host.url=$SonarQubeUrl
      -Dsonar.login=$SonarQubeLogin 
  cache:
    key: $CI_BUILD_REF_NAME"
  needs:
    - build-backend-code-job

build-frontend-code-job:
  stage: build  
  only:
    changes:
    - frontend/*
  script:        
    - cd frontend
    - npm install
    - npm run build
  cache:
    key: $CI_BUILD_REF_NAME"
  artifacts:
    paths:
      - frontend/dist/frontend  
   
sonarqube-frontend-sast:
  stage: test
  only:
    changes:
    - frontend/*
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_TOKEN: $SonarQubeToken
    SONAR_HOST_URL: $SonarQubeUrl
    GIT_DEPTH: 0  
  script:
    - cd frontend
    - sonar-scanner 
      -Dsonar.projectKey=$SonaQubeProjectFrontend 
      -Dsonar.sources=. 
      -Dsonar.host.url=$SonarQubeUrl 
      -Dsonar.login=$SonarQubeLogin 
  cache:
    key: $CI_BUILD_REF_NAME"
  needs:
    - build-frontend-code-job
          

slack-notification-frontend:
 stage: notify
 only:
   changes:
   - frontend/*
 script:
   - "curl -X POST -H \'Content-type: application/json\' --data \"{\'text':\'Артамохин Александр собрал frontend, скачать артефакты можно по ссылке <https://gitlab.praktikum-services.ru/api/v4/projects/1818/jobs/artifacts/release-0.0.1/download?job=build-frontend-code-job&private_token=$project_token|frontend>\'}\" https://***REMOVED***"
 needs:
   - build-frontend-code-job

slack-notification-backend:
 stage: notify
 only:
   changes:
   - backend/*
 script:
   - "curl -X POST -H \'Content-type: application/json\' --data \"{\'text':\'Артамохин Александр собрал backend, скачать артефакты можно по ссылке <https://gitlab.praktikum-services.ru/api/v4/projects/1818/jobs/artifacts/release-0.0.1/download?job=build-backend-code-job&private_token=$project_token|backend>\'}\" https://***REMOVED***"
 needs:
   - build-backend-code-job

